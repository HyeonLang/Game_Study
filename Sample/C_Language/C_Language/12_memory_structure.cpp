// 12_memory_structure.cpp

/*
    Memory structure
    ------------------------------------------------------------------------ High Address
    |                                                                     |
    |                         Stack                                       | --> 메모리 크기를 컴파일러가 예측 가능 할때 사용, OS에 메모리를 받아올때 속도가 빠름
    |                           |                                         |
    . . . . . . . . . . . . . . . . . | . . . . . . . . . . . . . . . . . . .
    |                           |                                         |
    |                           v                                         |
    |                          Free                                       |
    |                           ^                                         |
    |                           |                                         |
    . . . . . . . . . . . . . . | . .  . . . . . . . . . . . . . . . . . . .
    |                           |                                         |
    |                         Heap                                        | --> 메모리 크기를 예측 불가능 할때
    |                                                                     |
    ------------------------------------------------------------------------ 이 아래는 프로그램 시작전 메모리가 잡힌다
    |                                                                      |
    |                 Global/Static Variables                              |
    |                        Data                                          |
    |                                                                      |
    ------------------------------------------------------------------------
    |                                                                      |
    |                  Program Code(Read Only)                             |
    |                         code                                         |
    |                                                                      |
    ------------------------------------------------------------------------ Low Address
    위로갈수록 가지는 주소값이 크다
    os에따라 다를수 있다.
*/

/*
    Code
        - 실행할 프로그램의 코드가 저장된다. (언어로 작성한 함수, 명령문)
        - 텍스트 영역이라고도 부른다.
        - 읽기 전용 영역 -> 데이터를 읽을 수만 있고 수정은 안됨

    Data
        - 전역 변수와 정적 변수가 저장된다.
        - 프로그램 실행과 동시에 할당되고 프로그램이 종료시 소멸된다.

    Stack
        - 지역변수가 저장되는 영역이다.
        - 선언시 할당되고 해당 지역을 벗어나면 소멸한다.
        - 높은 주소에서 낮은 주소쪽으로 할당된다.

    Heap
        - 사용자가 직접 관리하는 메모리 영역
        - 사용자가 동적으로 메모리 공간을 할당할 때 사용하는 영역이다.
        - 낮은 주소에서 높은 주소쪽으로 할당된다.

    Heap과 Stack
    - Heap과 Stack은 같은 공간을 공유한다 
    - 공간을 공유하기 때문에 서로의 영역을 침범하는 경우가 있는데 Heap overflow, Stack overflow라고 부른다.

  

*/
